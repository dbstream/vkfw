/**
 * libwayland functions.
 * Copyright (C) 2024  dbstream
 *
 * NOTE: this file must be included before wayland-protocol.h and any other
 * header files generated by generate_protocols.sh.
 */
#include <wayland-client-core.h>
#include <wayland-util.h>

/**
 *   Everyone should take the time to learn vim macros. It saves so much time
 *   in situations like these (see below).
 *
 * ~david
 */

#define VKFW_WL_ALL_FUNCS(macro)	\
macro(wl_array_add)			\
macro(wl_array_copy)			\
macro(wl_array_init)			\
macro(wl_array_release)			\
macro(wl_display_cancel_read)		\
macro(wl_display_connect)		\
macro(wl_display_connect_to_fd)		\
macro(wl_display_create_queue)		\
macro(wl_display_create_queue_with_name)	\
macro(wl_display_disconnect)		\
macro(wl_display_dispatch)		\
macro(wl_display_dispatch_pending)	\
macro(wl_display_dispatch_queue)	\
macro(wl_display_dispatch_queue_pending)	\
macro(wl_display_flush)			\
macro(wl_display_get_error)		\
macro(wl_display_get_fd)		\
macro(wl_display_get_protocol_error)	\
macro(wl_display_prepare_read)		\
macro(wl_display_prepare_read_queue)	\
macro(wl_display_read_events)		\
macro(wl_display_roundtrip)		\
macro(wl_display_roundtrip_queue)	\
macro(wl_display_set_max_buffer_size)	\
macro(wl_event_queue_destroy)		\
macro(wl_event_queue_get_name)		\
macro(wl_list_empty)			\
macro(wl_list_init)			\
macro(wl_list_insert)			\
macro(wl_list_insert_list)		\
macro(wl_list_length)			\
macro(wl_list_remove)			\
macro(wl_log_set_handler_client)	\
macro(wl_proxy_add_dispatcher)		\
macro(wl_proxy_add_listener)		\
macro(wl_proxy_create)			\
macro(wl_proxy_create_wrapper)		\
macro(wl_proxy_destroy)			\
macro(wl_proxy_get_class)		\
macro(wl_proxy_get_display)		\
macro(wl_proxy_get_id)			\
macro(wl_proxy_get_listener)		\
macro(wl_proxy_get_queue)		\
macro(wl_proxy_get_tag)			\
macro(wl_proxy_get_user_data)		\
macro(wl_proxy_get_version)		\
macro(wl_proxy_marshal)			\
macro(wl_proxy_marshal_array)		\
macro(wl_proxy_marshal_array_constructor)	\
macro(wl_proxy_marshal_array_constructor_versioned)	\
macro(wl_proxy_marshal_array_flags)	\
macro(wl_proxy_marshal_constructor)	\
macro(wl_proxy_marshal_constructor_versioned)	\
macro(wl_proxy_marshal_flags)		\
macro(wl_proxy_set_queue)		\
macro(wl_proxy_set_tag)			\
macro(wl_proxy_set_user_data)		\
macro(wl_proxy_wrapper_destroy)

#define VKFW_WL_DEFINE_FUNC(name)	\
typedef decltype(&name) PFN##name;	\
extern PFN##name vkfw_##name;
VKFW_WL_ALL_FUNCS(VKFW_WL_DEFINE_FUNC)
#undef VKFW_WL_DEFINE_FUNC

#define wl_array_add vkfw_wl_array_add
#define wl_array_copy vkfw_wl_array_copy
#define wl_array_init vkfw_wl_array_init
#define wl_array_release vkfw_wl_array_release
#define wl_display_cancel_read vkfw_wl_display_cancel_read
#define wl_display_connect vkfw_wl_display_connect
#define wl_display_connect_to_fd vkfw_wl_display_connect_to_fd
#define wl_display_create_queue vkfw_wl_display_create_queue
#define wl_display_create_queue_with_name vkfw_wl_display_create_queue_with_name
#define wl_display_disconnect vkfw_wl_display_disconnect
#define wl_display_dispatch vkfw_wl_display_dispatch
#define wl_display_dispatch_pending vkfw_wl_display_dispatch_pending
#define wl_display_dispatch_queue vkfw_wl_display_dispatch_queue
#define wl_display_dispatch_queue_pending vkfw_wl_display_dispatch_queue_pending
#define wl_display_flush vkfw_wl_display_flush
#define wl_display_get_error vkfw_wl_display_get_error
#define wl_display_get_fd vkfw_wl_display_get_fd
#define wl_display_get_protocol_error vkfw_wl_display_get_protocol_error
#define wl_display_prepare_read vkfw_wl_display_prepare_read
#define wl_display_prepare_read_queue vkfw_wl_display_prepare_read_queue
#define wl_display_read_events vkfw_wl_display_read_events
#define wl_display_roundtrip vkfw_wl_display_roundtrip
#define wl_display_roundtrip_queue vkfw_wl_display_roundtrip_queue
#define wl_display_set_max_buffer_size vkfw_wl_display_set_max_buffer_size
#define wl_event_queue_destroy vkfw_wl_event_queue_destroy
#define wl_event_queue_get_name vkfw_wl_event_queue_get_name
#define wl_list_empty vkfw_wl_list_empty
#define wl_list_init vkfw_wl_list_init
#define wl_list_insert vkfw_wl_list_insert
#define wl_list_insert_list vkfw_wl_list_insert_list
#define wl_list_length vkfw_wl_list_length
#define wl_list_remove vkfw_wl_list_remove
#define wl_log_set_handler_client vkfw_wl_log_set_handler_client
#define wl_proxy_add_dispatcher vkfw_wl_proxy_add_dispatcher
#define wl_proxy_add_listener vkfw_wl_proxy_add_listener
#define wl_proxy_create vkfw_wl_proxy_create
#define wl_proxy_create_wrapper vkfw_wl_proxy_create_wrapper
#define wl_proxy_destroy vkfw_wl_proxy_destroy
#define wl_proxy_get_class vkfw_wl_proxy_get_class
#define wl_proxy_get_display vkfw_wl_proxy_get_display
#define wl_proxy_get_id vkfw_wl_proxy_get_id
#define wl_proxy_get_listener vkfw_wl_proxy_get_listener
#define wl_proxy_get_queue vkfw_wl_proxy_get_queue
#define wl_proxy_get_tag vkfw_wl_proxy_get_tag
#define wl_proxy_get_user_data vkfw_wl_proxy_get_user_data
#define wl_proxy_get_version vkfw_wl_proxy_get_version
#define wl_proxy_marshal vkfw_wl_proxy_marshal
#define wl_proxy_marshal_array vkfw_wl_proxy_marshal_array
#define wl_proxy_marshal_array_constructor vkfw_wl_proxy_marshal_array_constructor
#define wl_proxy_marshal_array_constructor_versioned vkfw_wl_proxy_marshal_array_constructor_versioned
#define wl_proxy_marshal_array_flags vkfw_wl_proxy_marshal_array_flags
#define wl_proxy_marshal_constructor vkfw_wl_proxy_marshal_constructor
#define wl_proxy_marshal_constructor_versioned vkfw_wl_proxy_marshal_constructor_versioned
#define wl_proxy_marshal_flags vkfw_wl_proxy_marshal_flags
#define wl_proxy_set_queue vkfw_wl_proxy_set_queue
#define wl_proxy_set_tag vkfw_wl_proxy_set_tag
#define wl_proxy_set_user_data vkfw_wl_proxy_set_user_data
#define wl_proxy_wrapper_destroy vkfw_wl_proxy_wrapper_destroy
