==========
VKFW
==========

VKFW is a framework for window creation, event handling, and Vulkan graphics
that I'm working on (because I find it fun for some reason).

Current state of the project
============================

VKFW is early in development. Currently, it supports X11, Wayland, and Win32, to
varying levels of completeness. No other backends are planned.

Don't expect any rapid progress on this project -- this is a hobbyist project of
mine.

NOTE: VKFW probably isn't for you. If you're developing a game or a
general-purpose application, you probably want to use GLFW or SDL3 instead.

X11
----------

X11 is a relatively complete backend. It has support for most things that games
need. Keyboard and mouse input is fully supported.

Wayland
----------

The Wayland backend is early in its development. Currently, windows can be
created and destroyed, but input handling is relatively incomplete.

Win32
----------

The Win32 backend is not being actively worked on right now. Window creation
is supported, but input handling has not yet been worked on.

Documentation
=============

Despite there being a folder named `Documentation/` in this repository, there is
not much documentation other than the VKFW header itself.

> Use the source, Luke!

Versioning
==========

VKFW uses the same major.minor.patch versioning scheme as Vulkan 1.x. VKFW also
bundles the header version it was compiled against to make the full version.
This means that both the VKFW library version and the Vulkan version need to be
checked for support for new features.

If an application calls `vkfwInit()`, as it should, the runtime VKFW version
will be automatically checked against what the application was compiled against.

Code guidelines
===============

- Write readable and efficient code.

- Handle errors nicely.

- Write extensible code.

- Ensure backwards-compatibility.
